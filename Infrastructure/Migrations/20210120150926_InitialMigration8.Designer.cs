// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210120150926_InitialMigration8")]
    partial class InitialMigration8
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entity.ConTableCustomerAndBill", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BillNo")
                        .HasColumnType("int");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<double>("TotalBillAfterDiscount")
                        .HasColumnType("float");

                    b.Property<double>("TotalBillBeforeDiscount")
                        .HasColumnType("float");

                    b.HasKey("CustomerId");

                    b.HasIndex("SupplierId");

                    b.ToTable("ConTableCustomerAndBill");
                });

            modelBuilder.Entity("Core.Entity.ConTableItemAndPurchaseBill", b =>
                {
                    b.Property<string>("ItemNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BillNo")
                        .HasColumnType("int");

                    b.Property<double>("ItemPriceInTheBill")
                        .HasColumnType("float");

                    b.Property<int>("ItemQuantityInTheBill")
                        .HasColumnType("int");

                    b.Property<double>("ItemTotalPriceInTheBill")
                        .HasColumnType("float");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemNo");

                    b.HasIndex("BillNo");

                    b.ToTable("ConTableItemAndPurchaseBill");
                });

            modelBuilder.Entity("Core.Entity.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CustomerTotalPurchases")
                        .HasColumnType("float");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Core.Entity.Item", b =>
                {
                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("CurrentCost")
                        .HasColumnType("float");

                    b.Property<int?>("CurrentInventory")
                        .HasColumnType("int");

                    b.Property<string>("Location1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameArabic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price1")
                        .HasColumnType("float");

                    b.Property<double?>("Price2")
                        .HasColumnType("float");

                    b.Property<double?>("Price3")
                        .HasColumnType("float");

                    b.Property<int?>("Purchases")
                        .HasColumnType("int");

                    b.Property<int?>("Sales")
                        .HasColumnType("int");

                    b.Property<int?>("StockForTheFirstTerm")
                        .HasColumnType("int");

                    b.Property<int?>("StockForTheLastTerm")
                        .HasColumnType("int");

                    b.HasKey("ItemNo");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Core.Entity.ItemCostHistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BillNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit");

                    b.Property<string>("ItemNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("ItemCostHistories");
                });

            modelBuilder.Entity("Core.Entity.PurchaseBill", b =>
                {
                    b.Property<int>("BillNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BillTotalPriceAfterDiscount")
                        .HasColumnType("float");

                    b.Property<double>("BillTotalPriceBeforeDiscount")
                        .HasColumnType("float");

                    b.Property<string>("BillType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("OriginalPurchaseBillNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("BillNo");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseBills");
                });

            modelBuilder.Entity("Core.Entity.SalesBill", b =>
                {
                    b.Property<int>("BillNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("BillProfitAfterDiscount")
                        .HasColumnType("float");

                    b.Property<double>("BillProfitBeforeDiscount")
                        .HasColumnType("float");

                    b.Property<string>("BillType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<double>("SalesBillTotalBeforeDiscount")
                        .HasColumnType("float");

                    b.Property<double>("SalesBillTotalPriceAfterDiscount")
                        .HasColumnType("float");

                    b.Property<string>("SalesmanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillNo");

                    b.ToTable("SalesBills");
                });

            modelBuilder.Entity("Core.Entity.Supplier", b =>
                {
                    b.Property<int>("SupllierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SupplierAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SupplierTotalPurchases")
                        .HasColumnType("float");

                    b.HasKey("SupllierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Core.Entity.ConTableCustomerAndBill", b =>
                {
                    b.HasOne("Core.Entity.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("Core.Entity.ConTableItemAndPurchaseBill", b =>
                {
                    b.HasOne("Core.Entity.PurchaseBill", "purchaseBill")
                        .WithMany()
                        .HasForeignKey("BillNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Core.Entity.PurchaseBill", b =>
                {
                    b.HasOne("Core.Entity.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
